{"ast":null,"code":"import store from '../store/index';\nimport { fetch_post, receive_error, receive_post } from '../actions/index';\n\nconst thunk_action_creator = userName => {\n  const user = userName.replace(/\\s/g, \"\");\n  store.dispatch(fetch_post());\n  return function (dispatch, getState) {\n    return fetch(\"https://api.github.com/users/\".concat(user)).then(data => data.json()).then(data => {\n      if (data.message === \"Not Found\") {\n        throw new Error(\"No such user found\");\n      } else dispatch(receive_post(data));\n    }).catch(err => dispatch(receive_error(data)));\n  };\n};\n\nexport default thunk_action_creator;","map":{"version":3,"sources":["/home/edilsoncosta/Estudos/React/react-redux-thunk-github-services/src/middleware/index.js"],"names":["store","fetch_post","receive_error","receive_post","thunk_action_creator","userName","user","replace","dispatch","getState","fetch","then","data","json","message","Error","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAAQC,UAAR,EAAmBC,aAAnB,EAAkCC,YAAlC,QAAqD,kBAArD;;AAEA,MAAMC,oBAAoB,GAAGC,QAAQ,IAAG;AACpC,QAAMC,IAAI,GAAGD,QAAQ,CAACE,OAAT,CAAkB,KAAlB,EAAwB,EAAxB,CAAb;AAGAP,EAAAA,KAAK,CAACQ,QAAN,CAAeP,UAAU,EAAzB;AAEA,SAAO,UAASO,QAAT,EAAkBC,QAAlB,EAA2B;AAE9B,WAAOC,KAAK,wCAAiCJ,IAAjC,EAAL,CACFK,IADE,CACGC,IAAI,IAAGA,IAAI,CAACC,IAAL,EADV,EAEEF,IAFF,CAEOC,IAAI,IAAI;AACV,UAAGA,IAAI,CAACE,OAAL,KAAgB,WAAnB,EAA+B;AAC3B,cAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACH,OAFD,MAEMP,QAAQ,CAACL,YAAY,CAACS,IAAD,CAAb,CAAR;AACT,KANF,EAOEI,KAPF,CAOQC,GAAG,IAAIT,QAAQ,CAACN,aAAa,CAACU,IAAD,CAAd,CAPvB,CAAP;AAQH,GAVD;AAWH,CAjBD;;AAoBA,eAAeR,oBAAf","sourcesContent":["import store from '../store/index'\nimport {fetch_post,receive_error, receive_post} from '../actions/index'\n\nconst thunk_action_creator = userName =>{\n    const user = userName.replace (/\\s/g,\"\");\n\n\n    store.dispatch(fetch_post());\n\n    return function(dispatch,getState){\n\n        return fetch(`https://api.github.com/users/${user}`)\n            .then(data=> data.json())\n                .then(data => {\n                    if(data.message ===\"Not Found\"){\n                        throw new Error(\"No such user found\");\n                    }else dispatch(receive_post(data));\n                })\n                .catch(err => dispatch(receive_error(data)));\n    };\n};\n\n\nexport default thunk_action_creator; "]},"metadata":{},"sourceType":"module"}